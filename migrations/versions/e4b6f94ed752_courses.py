"""Course information

Revision ID: e4b6f94ed752
Revises: 56f8964c131c
Create Date: 2018-04-02 23:11:41.255284

"""
#  TeSLA Admin
#  Copyright (C) 2019 Universitat Oberta de Catalunya
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e4b6f94ed752'
down_revision = '56f8964c131c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
        sa.Column('id', sa.BigInteger(), nullable=False),
        sa.Column('code', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=False),
        sa.Column('start', sa.DateTime(), nullable=True),
        sa.Column('end', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code'),
        info={"ifexists": True}
    )
    op.create_table('course_activity',
        sa.Column('course_id', sa.BigInteger(), nullable=False),
        sa.Column('activity_id', sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
        sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
        sa.PrimaryKeyConstraint('course_id', 'activity_id'),
        info={"ifexists": True}
    )
    op.create_table('course_learner',
        sa.Column('course_id', sa.BigInteger(), nullable=False),
        sa.Column('tesla_id', sa.String(length=64), nullable=False),
        sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
        sa.ForeignKeyConstraint(['tesla_id'], ['learner.tesla_id'], ),
        sa.PrimaryKeyConstraint('course_id', 'tesla_id'),
        info={"ifexists": True}
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('course_learner', info={"ifexists": True})
    op.drop_table('course_activity', info={"ifexists": True})
    op.drop_table('course', info={"ifexists": True})
    # ### end Alembic commands ###
